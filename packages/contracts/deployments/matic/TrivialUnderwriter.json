{
  "address": "0xFBbf4607bAAd3Aa46519AD4f34a60546C80DDDa7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_controller",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "proxy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x229b632c7f8ec278c66227a1a8f2b35876286df234b5410d9e58013d099e22b1",
  "receipt": {
    "to": null,
    "from": "0x12fBc372dc2f433392CC6caB29CFBcD5082EF494",
    "contractAddress": "0xFBbf4607bAAd3Aa46519AD4f34a60546C80DDDa7",
    "transactionIndex": 61,
    "gasUsed": "424590",
    "logsBloom": "0x
    "blockHash": "0x1ae7a323e068de944ac90f72804a9d47a590749179d4aa55431b9c936643947d",
    "transactionHash": "0x229b632c7f8ec278c66227a1a8f2b35876286df234b5410d9e58013d099e22b1",
    "logs": [
      {
        "transactionIndex": 61,
        "blockNumber": 21407358,
        "transactionHash": "0x229b632c7f8ec278c66227a1a8f2b35876286df234b5410d9e58013d099e22b1",
        "address": "0xFBbf4607bAAd3Aa46519AD4f34a60546C80DDDa7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000012fbc372dc2f433392cc6cab29cfbcd5082ef494"
        ],
        "data": "0x",
        "logIndex": 424,
        "blockHash": "0x1ae7a323e068de944ac90f72804a9d47a590749179d4aa55431b9c936643947d"
      },
      {
        "transactionIndex": 61,
        "blockNumber": 21407358,
        "transactionHash": "0x229b632c7f8ec278c66227a1a8f2b35876286df234b5410d9e58013d099e22b1",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x00000000000000000000000012fbc372dc2f433392cc6cab29cfbcd5082ef494",
          "0x000000000000000000000000f0245f6251bef9447a08766b9da2b07b28ad80b0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000002d40dee3c168000000000000000000000000000000000000000000000000351610d5b64b67a78100000000000000000000000000000000000000000000024e1340fdd202fc89dc00000000000000000000000000000000000000000000003515e394d767a63f8100000000000000000000000000000000000000000000024e136e3eb0e6bdf1dc",
        "logIndex": 425,
        "blockHash": "0x1ae7a323e068de944ac90f72804a9d47a590749179d4aa55431b9c936643947d"
      }
    ],
    "blockNumber": 21407358,
    "cumulativeGasUsed": "10421629",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3f3cFa3ac58e12c15E2fF8Ae05C8563437108F51"
  ],
  "solcInputHash": "ff2a18c8b0ad0e75b8bcd3e50d71650b",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_controller\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"proxy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"raymondpulver\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxy(address,bytes)\":{\"params\":{\"data\":\"the calldata for the transaction\",\"target\":\"the to address of the transaction\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"contract that is the simplest underwriter, just a proxy with an owner tag\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"proxy(address,bytes)\":{\"notice\":\"proxy a regular call to an arbitrary contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/underwriter/TrivialUnderwriter.sol\":\"TrivialUnderwriter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/underwriter/TrivialUnderwriter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\nimport {Ownable} from 'oz410/access/Ownable.sol';\\n\\n/**\\n@title contract that is the simplest underwriter, just a proxy with an owner tag\\n@author raymondpulver\\n*/\\ncontract TrivialUnderwriter is Ownable {\\n\\taddress payable public immutable controller;\\n\\n\\tconstructor(address payable _controller) Ownable() {\\n\\t\\tcontroller = _controller;\\n\\t}\\n\\n\\tfunction bubble(bool success, bytes memory response) internal pure {\\n\\t\\tassembly {\\n\\t\\t\\tif iszero(success) {\\n\\t\\t\\t\\trevert(add(0x20, response), mload(response))\\n\\t\\t\\t}\\n\\t\\t\\treturn(add(0x20, response), mload(response))\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n  @notice proxy a regular call to an arbitrary contract\\n  @param target the to address of the transaction\\n  @param data the calldata for the transaction\\n  */\\n\\tfunction proxy(address payable target, bytes memory data) public payable onlyOwner {\\n\\t\\t(bool success, bytes memory response) = target.call{value: msg.value}(data);\\n\\t\\tbubble(success, response);\\n\\n\\t}\\n\\n\\t/**\\n  @notice handles any other call and forwards to the controller\\n  */\\n\\tfallback() external payable {\\n\\t\\trequire(msg.sender == owner(), 'must be called by owner');\\n\\t\\t(bool success, bytes memory response) = controller.call{value: msg.value}(msg.data);\\n\\t\\tbubble(success, response);\\n\\t}\\n}\\n\",\"keccak256\":\"0x26c532fba4e2bfb8f1c763ce957a61ce25f0c7487db37fb5ab098fb9e9290302\",\"license\":\"MIT\"},\"oz410/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x549c5343ad9f7e3f38aa4c4761854403502574bbc15b822db2ce892ff9b79da7\",\"license\":\"MIT\"},\"oz410/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516107023803806107028339818101604052602081101561003357600080fd5b5051600061003f61009e565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060601b6001600160601b0319166080526100a2565b3390565b60805160601c61063f6100c36000398060bc52806105bd525061063f6000f3fe60806040526004361061004a5760003560e01c8063715018a6146101515780638da5cb5b14610168578063be6d055a14610199578063f2fde38b1461024f578063f77c479114610282575b610052610297565b6001600160a01b0316336001600160a01b0316146100b7576040805162461bcd60e51b815260206004820152601760248201527f6d7573742062652063616c6c6564206279206f776e6572000000000000000000604482015290519081900360640190fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031634600036604051808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610139576040519150601f19603f3d011682016040523d82523d6000602084013e61013e565b606091505b509150915061014d82826102a6565b5050005b34801561015d57600080fd5b506101666102bb565b005b34801561017457600080fd5b5061017d610297565b604080516001600160a01b039092168252519081900360200190f35b610166600480360360408110156101af57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101da57600080fd5b8201836020820111156101ec57600080fd5b8035906020019184600183028401116401000000008311171561020e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610379945050505050565b34801561025b57600080fd5b506101666004803603602081101561027257600080fd5b50356001600160a01b03166104a7565b34801561028e57600080fd5b5061017d6105bb565b6000546001600160a01b031690565b816102b357805181602001fd5b805181602001f35b6102c36105df565b6001600160a01b03166102d4610297565b6001600160a01b03161461032f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103816105df565b6001600160a01b0316610392610297565b6001600160a01b0316146103ed576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080836001600160a01b031634846040518082805190602001908083835b6020831061042b5780518252601f19909201916020918201910161040c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461048d576040519150601f19603f3d011682016040523d82523d6000602084013e610492565b606091505b50915091506104a182826102a6565b50505050565b6104af6105df565b6001600160a01b03166104c0610297565b6001600160a01b03161461051b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105605760405162461bcd60e51b81526004018080602001828103825260268152602001806105e46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f88ccf91cbe03a350c7ad8645d0e7c68dd81b008d37cc86ceb795606eefe9b7a64736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c8063715018a6146101515780638da5cb5b14610168578063be6d055a14610199578063f2fde38b1461024f578063f77c479114610282575b610052610297565b6001600160a01b0316336001600160a01b0316146100b7576040805162461bcd60e51b815260206004820152601760248201527f6d7573742062652063616c6c6564206279206f776e6572000000000000000000604482015290519081900360640190fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031634600036604051808383808284376040519201945060009350909150508083038185875af1925050503d8060008114610139576040519150601f19603f3d011682016040523d82523d6000602084013e61013e565b606091505b509150915061014d82826102a6565b5050005b34801561015d57600080fd5b506101666102bb565b005b34801561017457600080fd5b5061017d610297565b604080516001600160a01b039092168252519081900360200190f35b610166600480360360408110156101af57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101da57600080fd5b8201836020820111156101ec57600080fd5b8035906020019184600183028401116401000000008311171561020e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610379945050505050565b34801561025b57600080fd5b506101666004803603602081101561027257600080fd5b50356001600160a01b03166104a7565b34801561028e57600080fd5b5061017d6105bb565b6000546001600160a01b031690565b816102b357805181602001fd5b805181602001f35b6102c36105df565b6001600160a01b03166102d4610297565b6001600160a01b03161461032f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6103816105df565b6001600160a01b0316610392610297565b6001600160a01b0316146103ed576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080836001600160a01b031634846040518082805190602001908083835b6020831061042b5780518252601f19909201916020918201910161040c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461048d576040519150601f19603f3d011682016040523d82523d6000602084013e610492565b606091505b50915091506104a182826102a6565b50505050565b6104af6105df565b6001600160a01b03166104c0610297565b6001600160a01b03161461051b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105605760405162461bcd60e51b81526004018080602001828103825260268152602001806105e46026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220f88ccf91cbe03a350c7ad8645d0e7c68dd81b008d37cc86ceb795606eefe9b7a64736f6c63430007060033",
  "devdoc": {
    "author": "raymondpulver",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "proxy(address,bytes)": {
        "params": {
          "data": "the calldata for the transaction",
          "target": "the to address of the transaction"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "contract that is the simplest underwriter, just a proxy with an owner tag",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "proxy(address,bytes)": {
        "notice": "proxy a regular call to an arbitrary contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18013,
        "contract": "contracts/underwriter/TrivialUnderwriter.sol:TrivialUnderwriter",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}